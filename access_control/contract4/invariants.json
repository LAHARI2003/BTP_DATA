{
    "invariants": [
        {
            "vulnerability": "Access Control",
            "invariant": "msg.sender == owner",
            "security_relevance": "High",
            "description": "Ensures that only the owner can execute certain functions, preventing unauthorized access to critical operations."
        },
        {
            "vulnerability": "Access Control",
            "invariant": "require(msg.sender == owner)",
            "security_relevance": "High",
            "description": "Checks if the caller is the owner before executing the function, essential for functions requiring ownership access."
        },
        {
            "vulnerability": "Access Control",
            "invariant": "msg.sender == tx.origin",
            "security_relevance": "Medium",
            "description": "Ensures that the contract is not being called by another contract, reducing the risk of re-entrancy and unauthorized contract interaction."
        },
        {
            "vulnerability": "Special Storage",
            "invariant": "immutable(owner)",
            "security_relevance": "High",
            "description": "The owner variable should ideally be set in a constructor to prevent unintended changes; however, due to the missing constructor issue, this invariant is compromised."
        },
        {
            "vulnerability": "Money Flow",
            "invariant": "balance == Old(balance) - withdrawAmount",
            "security_relevance": "Medium",
            "description": "Ensures the balance is updated correctly when withdrawals occur, tracking fund flow."
        }
    ]
}
